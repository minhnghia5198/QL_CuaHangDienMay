#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuanLyCuaHangDienMay
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QB_QL_CUA_HANG_DIEN_MAY")]
	public partial class qlCuaHangDienMayDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertMatHang(MatHang instance);
    partial void UpdateMatHang(MatHang instance);
    partial void DeleteMatHang(MatHang instance);
    partial void InsertNhaCungCap(NhaCungCap instance);
    partial void UpdateNhaCungCap(NhaCungCap instance);
    partial void DeleteNhaCungCap(NhaCungCap instance);
    partial void InsertLoaiMatHang(LoaiMatHang instance);
    partial void UpdateLoaiMatHang(LoaiMatHang instance);
    partial void DeleteLoaiMatHang(LoaiMatHang instance);
    partial void InsertKho(Kho instance);
    partial void UpdateKho(Kho instance);
    partial void DeleteKho(Kho instance);
    partial void InsertChiTietKho(ChiTietKho instance);
    partial void UpdateChiTietKho(ChiTietKho instance);
    partial void DeleteChiTietKho(ChiTietKho instance);
    #endregion
		
		public qlCuaHangDienMayDataContext() : 
				base(global::QuanLyCuaHangDienMay.Properties.Settings.Default.QB_QL_CUA_HANG_DIEN_MAYConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public qlCuaHangDienMayDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public qlCuaHangDienMayDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public qlCuaHangDienMayDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public qlCuaHangDienMayDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<MatHang> MatHangs
		{
			get
			{
				return this.GetTable<MatHang>();
			}
		}
		
		public System.Data.Linq.Table<NhaCungCap> NhaCungCaps
		{
			get
			{
				return this.GetTable<NhaCungCap>();
			}
		}
		
		public System.Data.Linq.Table<LoaiMatHang> LoaiMatHangs
		{
			get
			{
				return this.GetTable<LoaiMatHang>();
			}
		}
		
		public System.Data.Linq.Table<Kho> Khos
		{
			get
			{
				return this.GetTable<Kho>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietKho> ChiTietKhos
		{
			get
			{
				return this.GetTable<ChiTietKho>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MatHang")]
	public partial class MatHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHang;
		
		private string _TenMatHang;
		
		private string _MaLoaiMatHang;
		
		private string _DVT;
		
		private System.Nullable<decimal> _GiaBan;
		
		private System.Nullable<decimal> _GiaNhap;
		
		private string _MaNhaCC;
		
		private System.Nullable<byte> _BaoHanh;
		
		private string _TinhTrangHang;
		
		private EntitySet<ChiTietKho> _ChiTietKhos;
		
		private EntityRef<NhaCungCap> _NhaCungCap;
		
		private EntityRef<LoaiMatHang> _LoaiMatHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHangChanging(string value);
    partial void OnMaHangChanged();
    partial void OnTenMatHangChanging(string value);
    partial void OnTenMatHangChanged();
    partial void OnMaLoaiMatHangChanging(string value);
    partial void OnMaLoaiMatHangChanged();
    partial void OnDVTChanging(string value);
    partial void OnDVTChanged();
    partial void OnGiaBanChanging(System.Nullable<decimal> value);
    partial void OnGiaBanChanged();
    partial void OnGiaNhapChanging(System.Nullable<decimal> value);
    partial void OnGiaNhapChanged();
    partial void OnMaNhaCCChanging(string value);
    partial void OnMaNhaCCChanged();
    partial void OnBaoHanhChanging(System.Nullable<byte> value);
    partial void OnBaoHanhChanged();
    partial void OnTinhTrangHangChanging(string value);
    partial void OnTinhTrangHangChanged();
    #endregion
		
		public MatHang()
		{
			this._ChiTietKhos = new EntitySet<ChiTietKho>(new Action<ChiTietKho>(this.attach_ChiTietKhos), new Action<ChiTietKho>(this.detach_ChiTietKhos));
			this._NhaCungCap = default(EntityRef<NhaCungCap>);
			this._LoaiMatHang = default(EntityRef<LoaiMatHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHang", DbType="VarChar(11) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHang
		{
			get
			{
				return this._MaHang;
			}
			set
			{
				if ((this._MaHang != value))
				{
					this.OnMaHangChanging(value);
					this.SendPropertyChanging();
					this._MaHang = value;
					this.SendPropertyChanged("MaHang");
					this.OnMaHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenMatHang", DbType="NVarChar(100)")]
		public string TenMatHang
		{
			get
			{
				return this._TenMatHang;
			}
			set
			{
				if ((this._TenMatHang != value))
				{
					this.OnTenMatHangChanging(value);
					this.SendPropertyChanging();
					this._TenMatHang = value;
					this.SendPropertyChanged("TenMatHang");
					this.OnTenMatHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiMatHang", DbType="VarChar(11)")]
		public string MaLoaiMatHang
		{
			get
			{
				return this._MaLoaiMatHang;
			}
			set
			{
				if ((this._MaLoaiMatHang != value))
				{
					if (this._LoaiMatHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiMatHangChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiMatHang = value;
					this.SendPropertyChanged("MaLoaiMatHang");
					this.OnMaLoaiMatHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DVT", DbType="NVarChar(11)")]
		public string DVT
		{
			get
			{
				return this._DVT;
			}
			set
			{
				if ((this._DVT != value))
				{
					this.OnDVTChanging(value);
					this.SendPropertyChanging();
					this._DVT = value;
					this.SendPropertyChanged("DVT");
					this.OnDVTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaBan", DbType="Money")]
		public System.Nullable<decimal> GiaBan
		{
			get
			{
				return this._GiaBan;
			}
			set
			{
				if ((this._GiaBan != value))
				{
					this.OnGiaBanChanging(value);
					this.SendPropertyChanging();
					this._GiaBan = value;
					this.SendPropertyChanged("GiaBan");
					this.OnGiaBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaNhap", DbType="Money")]
		public System.Nullable<decimal> GiaNhap
		{
			get
			{
				return this._GiaNhap;
			}
			set
			{
				if ((this._GiaNhap != value))
				{
					this.OnGiaNhapChanging(value);
					this.SendPropertyChanging();
					this._GiaNhap = value;
					this.SendPropertyChanged("GiaNhap");
					this.OnGiaNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNhaCC", DbType="VarChar(11)")]
		public string MaNhaCC
		{
			get
			{
				return this._MaNhaCC;
			}
			set
			{
				if ((this._MaNhaCC != value))
				{
					if (this._NhaCungCap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNhaCCChanging(value);
					this.SendPropertyChanging();
					this._MaNhaCC = value;
					this.SendPropertyChanged("MaNhaCC");
					this.OnMaNhaCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaoHanh", DbType="TinyInt")]
		public System.Nullable<byte> BaoHanh
		{
			get
			{
				return this._BaoHanh;
			}
			set
			{
				if ((this._BaoHanh != value))
				{
					this.OnBaoHanhChanging(value);
					this.SendPropertyChanging();
					this._BaoHanh = value;
					this.SendPropertyChanged("BaoHanh");
					this.OnBaoHanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrangHang", DbType="NVarChar(50)")]
		public string TinhTrangHang
		{
			get
			{
				return this._TinhTrangHang;
			}
			set
			{
				if ((this._TinhTrangHang != value))
				{
					this.OnTinhTrangHangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrangHang = value;
					this.SendPropertyChanged("TinhTrangHang");
					this.OnTinhTrangHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MatHang_ChiTietKho", Storage="_ChiTietKhos", ThisKey="MaHang", OtherKey="MaHang")]
		public EntitySet<ChiTietKho> ChiTietKhos
		{
			get
			{
				return this._ChiTietKhos;
			}
			set
			{
				this._ChiTietKhos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaCungCap_MatHang", Storage="_NhaCungCap", ThisKey="MaNhaCC", OtherKey="MaNhaCC", IsForeignKey=true)]
		public NhaCungCap NhaCungCap
		{
			get
			{
				return this._NhaCungCap.Entity;
			}
			set
			{
				NhaCungCap previousValue = this._NhaCungCap.Entity;
				if (((previousValue != value) 
							|| (this._NhaCungCap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhaCungCap.Entity = null;
						previousValue.MatHangs.Remove(this);
					}
					this._NhaCungCap.Entity = value;
					if ((value != null))
					{
						value.MatHangs.Add(this);
						this._MaNhaCC = value.MaNhaCC;
					}
					else
					{
						this._MaNhaCC = default(string);
					}
					this.SendPropertyChanged("NhaCungCap");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiMatHang_MatHang", Storage="_LoaiMatHang", ThisKey="MaLoaiMatHang", OtherKey="MaLoaiMatHang", IsForeignKey=true)]
		public LoaiMatHang LoaiMatHang
		{
			get
			{
				return this._LoaiMatHang.Entity;
			}
			set
			{
				LoaiMatHang previousValue = this._LoaiMatHang.Entity;
				if (((previousValue != value) 
							|| (this._LoaiMatHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiMatHang.Entity = null;
						previousValue.MatHangs.Remove(this);
					}
					this._LoaiMatHang.Entity = value;
					if ((value != null))
					{
						value.MatHangs.Add(this);
						this._MaLoaiMatHang = value.MaLoaiMatHang;
					}
					else
					{
						this._MaLoaiMatHang = default(string);
					}
					this.SendPropertyChanged("LoaiMatHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietKhos(ChiTietKho entity)
		{
			this.SendPropertyChanging();
			entity.MatHang = this;
		}
		
		private void detach_ChiTietKhos(ChiTietKho entity)
		{
			this.SendPropertyChanging();
			entity.MatHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhaCungCap")]
	public partial class NhaCungCap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNhaCC;
		
		private string _TenNhaCC;
		
		private string _DiaChiNCC;
		
		private string _DienThoaiNCC;
		
		private string _EmailNCC;
		
		private string _websiteNCC;
		
		private EntitySet<MatHang> _MatHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNhaCCChanging(string value);
    partial void OnMaNhaCCChanged();
    partial void OnTenNhaCCChanging(string value);
    partial void OnTenNhaCCChanged();
    partial void OnDiaChiNCCChanging(string value);
    partial void OnDiaChiNCCChanged();
    partial void OnDienThoaiNCCChanging(string value);
    partial void OnDienThoaiNCCChanged();
    partial void OnEmailNCCChanging(string value);
    partial void OnEmailNCCChanged();
    partial void OnwebsiteNCCChanging(string value);
    partial void OnwebsiteNCCChanged();
    #endregion
		
		public NhaCungCap()
		{
			this._MatHangs = new EntitySet<MatHang>(new Action<MatHang>(this.attach_MatHangs), new Action<MatHang>(this.detach_MatHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNhaCC", DbType="VarChar(11) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNhaCC
		{
			get
			{
				return this._MaNhaCC;
			}
			set
			{
				if ((this._MaNhaCC != value))
				{
					this.OnMaNhaCCChanging(value);
					this.SendPropertyChanging();
					this._MaNhaCC = value;
					this.SendPropertyChanged("MaNhaCC");
					this.OnMaNhaCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNhaCC", DbType="NVarChar(200)")]
		public string TenNhaCC
		{
			get
			{
				return this._TenNhaCC;
			}
			set
			{
				if ((this._TenNhaCC != value))
				{
					this.OnTenNhaCCChanging(value);
					this.SendPropertyChanging();
					this._TenNhaCC = value;
					this.SendPropertyChanged("TenNhaCC");
					this.OnTenNhaCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChiNCC", DbType="NVarChar(200)")]
		public string DiaChiNCC
		{
			get
			{
				return this._DiaChiNCC;
			}
			set
			{
				if ((this._DiaChiNCC != value))
				{
					this.OnDiaChiNCCChanging(value);
					this.SendPropertyChanging();
					this._DiaChiNCC = value;
					this.SendPropertyChanged("DiaChiNCC");
					this.OnDiaChiNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoaiNCC", DbType="VarChar(16)")]
		public string DienThoaiNCC
		{
			get
			{
				return this._DienThoaiNCC;
			}
			set
			{
				if ((this._DienThoaiNCC != value))
				{
					this.OnDienThoaiNCCChanging(value);
					this.SendPropertyChanging();
					this._DienThoaiNCC = value;
					this.SendPropertyChanged("DienThoaiNCC");
					this.OnDienThoaiNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailNCC", DbType="NVarChar(50)")]
		public string EmailNCC
		{
			get
			{
				return this._EmailNCC;
			}
			set
			{
				if ((this._EmailNCC != value))
				{
					this.OnEmailNCCChanging(value);
					this.SendPropertyChanging();
					this._EmailNCC = value;
					this.SendPropertyChanged("EmailNCC");
					this.OnEmailNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_websiteNCC", DbType="NVarChar(100)")]
		public string websiteNCC
		{
			get
			{
				return this._websiteNCC;
			}
			set
			{
				if ((this._websiteNCC != value))
				{
					this.OnwebsiteNCCChanging(value);
					this.SendPropertyChanging();
					this._websiteNCC = value;
					this.SendPropertyChanged("websiteNCC");
					this.OnwebsiteNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaCungCap_MatHang", Storage="_MatHangs", ThisKey="MaNhaCC", OtherKey="MaNhaCC")]
		public EntitySet<MatHang> MatHangs
		{
			get
			{
				return this._MatHangs;
			}
			set
			{
				this._MatHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MatHangs(MatHang entity)
		{
			this.SendPropertyChanging();
			entity.NhaCungCap = this;
		}
		
		private void detach_MatHangs(MatHang entity)
		{
			this.SendPropertyChanging();
			entity.NhaCungCap = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiMatHang")]
	public partial class LoaiMatHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLoaiMatHang;
		
		private string _TenLoaiMatHang;
		
		private EntitySet<MatHang> _MatHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiMatHangChanging(string value);
    partial void OnMaLoaiMatHangChanged();
    partial void OnTenLoaiMatHangChanging(string value);
    partial void OnTenLoaiMatHangChanged();
    #endregion
		
		public LoaiMatHang()
		{
			this._MatHangs = new EntitySet<MatHang>(new Action<MatHang>(this.attach_MatHangs), new Action<MatHang>(this.detach_MatHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiMatHang", DbType="VarChar(11) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLoaiMatHang
		{
			get
			{
				return this._MaLoaiMatHang;
			}
			set
			{
				if ((this._MaLoaiMatHang != value))
				{
					this.OnMaLoaiMatHangChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiMatHang = value;
					this.SendPropertyChanged("MaLoaiMatHang");
					this.OnMaLoaiMatHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiMatHang", DbType="NVarChar(100)")]
		public string TenLoaiMatHang
		{
			get
			{
				return this._TenLoaiMatHang;
			}
			set
			{
				if ((this._TenLoaiMatHang != value))
				{
					this.OnTenLoaiMatHangChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiMatHang = value;
					this.SendPropertyChanged("TenLoaiMatHang");
					this.OnTenLoaiMatHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiMatHang_MatHang", Storage="_MatHangs", ThisKey="MaLoaiMatHang", OtherKey="MaLoaiMatHang")]
		public EntitySet<MatHang> MatHangs
		{
			get
			{
				return this._MatHangs;
			}
			set
			{
				this._MatHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MatHangs(MatHang entity)
		{
			this.SendPropertyChanging();
			entity.LoaiMatHang = this;
		}
		
		private void detach_MatHangs(MatHang entity)
		{
			this.SendPropertyChanging();
			entity.LoaiMatHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kho")]
	public partial class Kho : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKho;
		
		private string _TenKho;
		
		private EntitySet<ChiTietKho> _ChiTietKhos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKhoChanging(string value);
    partial void OnMaKhoChanged();
    partial void OnTenKhoChanging(string value);
    partial void OnTenKhoChanged();
    #endregion
		
		public Kho()
		{
			this._ChiTietKhos = new EntitySet<ChiTietKho>(new Action<ChiTietKho>(this.attach_ChiTietKhos), new Action<ChiTietKho>(this.detach_ChiTietKhos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKho", DbType="VarChar(11) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKho
		{
			get
			{
				return this._MaKho;
			}
			set
			{
				if ((this._MaKho != value))
				{
					this.OnMaKhoChanging(value);
					this.SendPropertyChanging();
					this._MaKho = value;
					this.SendPropertyChanged("MaKho");
					this.OnMaKhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKho", DbType="NVarChar(50)")]
		public string TenKho
		{
			get
			{
				return this._TenKho;
			}
			set
			{
				if ((this._TenKho != value))
				{
					this.OnTenKhoChanging(value);
					this.SendPropertyChanging();
					this._TenKho = value;
					this.SendPropertyChanged("TenKho");
					this.OnTenKhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kho_ChiTietKho", Storage="_ChiTietKhos", ThisKey="MaKho", OtherKey="MaKho")]
		public EntitySet<ChiTietKho> ChiTietKhos
		{
			get
			{
				return this._ChiTietKhos;
			}
			set
			{
				this._ChiTietKhos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietKhos(ChiTietKho entity)
		{
			this.SendPropertyChanging();
			entity.Kho = this;
		}
		
		private void detach_ChiTietKhos(ChiTietKho entity)
		{
			this.SendPropertyChanging();
			entity.Kho = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietKho")]
	public partial class ChiTietKho : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKho;
		
		private string _MaHang;
		
		private System.Nullable<int> _SoLuong;
		
		private EntityRef<Kho> _Kho;
		
		private EntityRef<MatHang> _MatHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKhoChanging(string value);
    partial void OnMaKhoChanged();
    partial void OnMaHangChanging(string value);
    partial void OnMaHangChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    #endregion
		
		public ChiTietKho()
		{
			this._Kho = default(EntityRef<Kho>);
			this._MatHang = default(EntityRef<MatHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKho", DbType="VarChar(11) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKho
		{
			get
			{
				return this._MaKho;
			}
			set
			{
				if ((this._MaKho != value))
				{
					if (this._Kho.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhoChanging(value);
					this.SendPropertyChanging();
					this._MaKho = value;
					this.SendPropertyChanged("MaKho");
					this.OnMaKhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHang", DbType="VarChar(11) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHang
		{
			get
			{
				return this._MaHang;
			}
			set
			{
				if ((this._MaHang != value))
				{
					if (this._MatHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHangChanging(value);
					this.SendPropertyChanging();
					this._MaHang = value;
					this.SendPropertyChanged("MaHang");
					this.OnMaHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kho_ChiTietKho", Storage="_Kho", ThisKey="MaKho", OtherKey="MaKho", IsForeignKey=true)]
		public Kho Kho
		{
			get
			{
				return this._Kho.Entity;
			}
			set
			{
				Kho previousValue = this._Kho.Entity;
				if (((previousValue != value) 
							|| (this._Kho.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kho.Entity = null;
						previousValue.ChiTietKhos.Remove(this);
					}
					this._Kho.Entity = value;
					if ((value != null))
					{
						value.ChiTietKhos.Add(this);
						this._MaKho = value.MaKho;
					}
					else
					{
						this._MaKho = default(string);
					}
					this.SendPropertyChanged("Kho");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MatHang_ChiTietKho", Storage="_MatHang", ThisKey="MaHang", OtherKey="MaHang", IsForeignKey=true)]
		public MatHang MatHang
		{
			get
			{
				return this._MatHang.Entity;
			}
			set
			{
				MatHang previousValue = this._MatHang.Entity;
				if (((previousValue != value) 
							|| (this._MatHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MatHang.Entity = null;
						previousValue.ChiTietKhos.Remove(this);
					}
					this._MatHang.Entity = value;
					if ((value != null))
					{
						value.ChiTietKhos.Add(this);
						this._MaHang = value.MaHang;
					}
					else
					{
						this._MaHang = default(string);
					}
					this.SendPropertyChanged("MatHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
